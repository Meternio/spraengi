// This file was generated by the storyblok CLI.
// DO NOT MODIFY THIS FILE BY HAND.
import type { ISbStoryData } from "storyblok";
export interface ButtonStoryblok {
  title?: string;
  type?: "" | "link" | "localScroll" | "reserve";
  variant?: "" | "primary" | "outline" | "ghost" | "link";
  href?: string;
  component: "button";
  _uid: string;
  [k: string]: any;
}

export interface AssetStoryblok {
  alt: string | null;
  copyright?: string | null;
  fieldtype: "asset";
  id: number;
  filename: string | null;
  name: string;
  title: string | null;
  focus: string | null;
  meta_data?: {
    [k: string]: any;
  };
  source?: string | null;
  is_external_url?: boolean;
  is_private?: boolean;
  src?: string;
  updated_at?: string;
  width?: number | null;
  height?: number | null;
  aspect_ratio?: number | null;
  public_id?: string | null;
  content_type?: string;
  [k: string]: any;
}

export interface EventStoryblok {
  date?: string;
  image?: AssetStoryblok;
  component: "event";
  _uid: string;
  [k: string]: any;
}

export interface EventGridStoryblok {
  count_events?: string;
  component: "event_grid";
  _uid: string;
  [k: string]: any;
}

export interface HeroStoryblok {
  image?: AssetStoryblok;
  youtube_video_id?: string;
  title?: string;
  buttons?: ButtonStoryblok[];
  component: "hero";
  _uid: string;
  [k: string]: any;
}

export interface PageStoryblok {
  header?: any;
  body?: (HeroStoryblok | SectionStoryblok)[];
  footer?: any;
  component: "page";
  _uid: string;
  [k: string]: any;
}

export interface SectionStoryblok {
  name?: string;
  show_moving_name?: boolean;
  body?: EventGridStoryblok[];
  component: "section";
  _uid: string;
  [k: string]: any;
}
