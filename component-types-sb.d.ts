// This file was generated by the storyblok CLI.
// DO NOT MODIFY THIS FILE BY HAND.
import type { ISbStoryData } from "storyblok";
export interface ButtonStoryblok {
  title?: string;
  icon?: string;
  type?: "" | "link" | "localScroll" | "reserve" | "event";
  variant?: "" | "primary" | "outline" | "ghost" | "link";
  href?: string;
  component: "button";
  _uid: string;
  [k: string]: any;
}

export interface AssetStoryblok {
  alt: string | null;
  copyright?: string | null;
  fieldtype: "asset";
  id: number;
  filename: string | null;
  name: string;
  title: string | null;
  focus: string | null;
  meta_data?: {
    [k: string]: any;
  };
  source?: string | null;
  is_external_url?: boolean;
  is_private?: boolean;
  src?: string;
  updated_at?: string;
  width?: number | null;
  height?: number | null;
  aspect_ratio?: number | null;
  public_id?: string | null;
  content_type?: string;
  [k: string]: any;
}

export interface CardStoryblok {
  variant?: "" | "default" | "event";
  title?: string;
  description?: string;
  date?: string;
  image?: AssetStoryblok;
  buttons?: ButtonStoryblok[];
  link?: string;
  component: "card";
  _uid: string;
  [k: string]: any;
}

export interface CarouselStoryblok {
  count_items?: string;
  count_items_per_view?: "" | "2" | "3" | "4";
  type?: "" | "drinks" | "food" | "games" | "team" | "partner";
  component: "carousel";
  _uid: string;
  [k: string]: any;
}

export interface ContactGridStoryblok {
  title?: string;
  google_maps_link?: string;
  icon_blocks?: IconBlockStoryblok[];
  component: "contact_grid";
  _uid: string;
  [k: string]: any;
}

export interface ContainerStoryblok {
  body?: (
    | CarouselStoryblok
    | CtaStoryblok
    | IconBlockGridStoryblok
    | EventGridStoryblok
    | ContactGridStoryblok
    | CardStoryblok
  )[];
  component: "container";
  _uid: string;
  [k: string]: any;
}

export interface CtaStoryblok {
  title?: string;
  description?: string;
  buttons?: ButtonStoryblok[];
  variant?: "" | "bright" | "dark" | "transparent";
  component: "cta";
  _uid: string;
  [k: string]: any;
}

export interface EventStoryblok {
  date?: string;
  image?: AssetStoryblok;
  link?: string;
  component: "event";
  _uid: string;
  [k: string]: any;
}

export interface EventBookingStoryblok {
  name?: string;
  phone?: string;
  email?: string;
  message?: string;
  people?: string;
  time?: string;
  date?: string;
  component: "event_booking";
  _uid: string;
  [k: string]: any;
}

export interface EventGridStoryblok {
  count_events?: string;
  component: "event_grid";
  _uid: string;
  [k: string]: any;
}

export interface GamesStoryblok {
  description?: string;
  image?: AssetStoryblok;
  component: "games";
  _uid: string;
  [k: string]: any;
}

export interface HeroStoryblok {
  image?: AssetStoryblok;
  youtube_video_id?: string;
  title?: string;
  buttons?: ButtonStoryblok[];
  component: "hero";
  _uid: string;
  [k: string]: any;
}

export interface IconBlockStoryblok {
  icon?: string;
  title?: string;
  description?: string;
  link?: string;
  component: "icon_block";
  _uid: string;
  [k: string]: any;
}

export interface IconBlockGridStoryblok {
  icon_blocks?: IconBlockStoryblok[];
  component: "icon_block_grid";
  _uid: string;
  [k: string]: any;
}

export interface OpeningHourStoryblok {
  day?: string;
  time?: string;
  component: "opening_hour";
  _uid: string;
  [k: string]: any;
}

export type MultilinkStoryblok =
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      anchor?: string;
      rel?: string;
      title?: string;
      prep?: string;
      linktype: "story";
      story?: {
        name: string;
        created_at?: string;
        published_at?: string;
        id: number;
        uuid: string;
        content?: {
          [k: string]: any;
        };
        slug: string;
        full_slug: string;
        sort_by_date?: null | string;
        position?: number;
        tag_list?: string[];
        is_startpage?: boolean;
        parent_id?: null | number;
        meta_data?: null | {
          [k: string]: any;
        };
        group_id?: string;
        first_published_at?: string;
        release_id?: null | number;
        lang?: string;
        path?: null | string;
        alternates?: any[];
        default_full_slug?: null | string;
        translated_slugs?: null | any[];
        [k: string]: any;
      };
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      linktype: "url";
      rel?: string;
      title?: string;
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      email?: string;
      linktype: "email";
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      linktype: "asset";
      [k: string]: any;
    };

export interface PageStoryblok {
  common?: any;
  header?: any;
  body?: (HeroStoryblok | SectionStoryblok)[];
  footer?: any;
  logo?: AssetStoryblok;
  buttons?: ButtonStoryblok[];
  opening_hours?: OpeningHourStoryblok[];
  title?: string;
  icon_blocks?: IconBlockStoryblok[];
  social_buttons?: ButtonStoryblok[];
  main_sponsor_image?: AssetStoryblok;
  main_sponsor_link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  component: "page";
  _uid: string;
  [k: string]: any;
}

export interface PartnerStoryblok {
  image?: AssetStoryblok;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  component: "partner";
  _uid: string;
  [k: string]: any;
}

export interface ProductStoryblok {
  description?: string;
  image?: AssetStoryblok;
  component: "product";
  _uid: string;
  [k: string]: any;
}

export interface ReservationStoryblok {
  name?: string;
  phone?: string;
  email?: string;
  message?: string;
  people?: string;
  time?: string;
  date?: string;
  component: "reservation";
  _uid: string;
  [k: string]: any;
}

export interface SectionStoryblok {
  name?: string;
  show_moving_name?: boolean;
  body?: (
    | EventGridStoryblok
    | CtaStoryblok
    | CardStoryblok
    | IconBlockGridStoryblok
    | GamesCarouselStoryblok
    | CarouselStoryblok
    | ContactGridStoryblok
    | ContainerStoryblok
  )[];
  component: "section";
  _uid: string;
  [k: string]: any;
}

export interface TeamStoryblok {
  description?: string;
  image?: AssetStoryblok;
  youtube_video_id?: string;
  component: "team";
  _uid: string;
  [k: string]: any;
}
